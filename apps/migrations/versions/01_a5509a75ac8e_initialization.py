"""初始化数据库

Revision ID: a5509a75ac8e
Revises: 
Create Date: 2022-06-20 18:17:29.755687

"""
import sqlalchemy.exc
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'a5509a75ac8e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        op.create_table(
            'assist_task',
            sa.Column(
                'task_id',
                sa.Integer(),
                autoincrement=True,
                nullable=False
            ),
            sa.Column('assistant_name', sa.Text(), nullable=True),
            sa.Column('state', sa.Text(), nullable=True),
            sa.Column('msg', sa.Text(), nullable=True),
            sa.Column('timestamp_request', sa.DateTime(), nullable=True),
            sa.Column('timestamp_response', sa.DateTime(), nullable=True),
            sa.Column('timestamp_assign', sa.DateTime(), nullable=True),
            sa.Column('timestamp_finish', sa.DateTime(), nullable=True),
            sa.Column('label_method', sa.Text(), nullable=True),
            sa.Column('assigned_labelers', sa.Text(), nullable=True),
            sa.Column('error_msg', sa.Text(), nullable=True),
            sa.Column('error_code', sa.Integer(), nullable=True),
            sa.PrimaryKeyConstraint('task_id'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'box',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.Unicode(length=64), nullable=True),
            sa.Column(
                'length',
                sa.Numeric(precision=10, scale=2),
                nullable=True
            ),
            sa.Column(
                'width',
                sa.Numeric(precision=10, scale=2),
                nullable=True
            ),
            sa.Column(
                'height',
                sa.Numeric(precision=10, scale=2),
                nullable=True
            ),
            sa.Column(
                'weight',
                sa.Numeric(precision=10, scale=2),
                nullable=True
            ),
            sa.Column('scan_code', sa.String(length=30), nullable=True),
            sa.Column('img_url', sa.Text(), nullable=True),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('name'),
            sa.UniqueConstraint('scan_code'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'dpt_map_box',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column(
                'serial_number',
                sa.String(length=50),
                nullable=False,
                comment='纸箱编号'
            ),
            sa.Column(
                'normal_length',
                sa.Numeric(precision=10, scale=2),
                nullable=False,
                comment='标准长度'
            ),
            sa.Column(
                'normal_width',
                sa.Numeric(precision=10, scale=2),
                nullable=False,
                comment='标准宽度'
            ),
            sa.Column(
                'normal_height',
                sa.Numeric(precision=10, scale=2),
                nullable=False,
                comment='标准高度'
            ),
            sa.Column(
                'real_length',
                sa.Numeric(precision=10, scale=2),
                nullable=False,
                comment='实际长度'
            ),
            sa.Column(
                'real_width',
                sa.Numeric(precision=10, scale=2),
                nullable=False,
                comment='实际宽度'
            ),
            sa.Column(
                'real_height',
                sa.Numeric(precision=10, scale=2),
                nullable=False,
                comment='实际高度'
            ),
            sa.Column(
                'create_time',
                sa.DateTime(),
                nullable=False,
                comment='创建时间'
            ),
            sa.Column(
                'update_time',
                sa.DateTime(),
                nullable=False,
                comment='更新时间'
            ),
            sa.Column('is_del', sa.BOOLEAN(), nullable=True, comment='是否已删除'),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint(
                'serial_number',
                'is_del',
                name='uniq_serial_number_is_del'
            )
        )
        op.create_index(
            op.f('ix_dpt_map_box_create_time'),
            'dpt_map_box',
            ['create_time'],
            unique=False
        )
        op.create_index(
            op.f('ix_dpt_map_box_update_time'),
            'dpt_map_box',
            ['update_time'],
            unique=False
        )
        op.create_table(
            'log',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('msg_type', sa.String(length=10), nullable=True),
            sa.Column('code', sa.String(length=10), nullable=True),
            sa.Column('class', sa.String(length=30), nullable=True),
            sa.Column('tag', sa.String(length=30), nullable=True),
            sa.Column('object', sa.String(length=30), nullable=True),
            sa.Column('tool', sa.String(length=30), nullable=True),
            sa.Column('worksapce', sa.String(length=30), nullable=True),
            sa.Column('zh_msg', sa.String(length=100), nullable=True),
            sa.Column('en_msg', sa.String(length=100), nullable=True),
            sa.Column('ja_msg', sa.String(length=100), nullable=True),
            sa.Column('zh_tip', sa.String(length=100), nullable=True),
            sa.Column('en_tip', sa.String(length=100), nullable=True),
            sa.Column('ja_tip', sa.String(length=100), nullable=True),
            sa.Column('timeout', sa.Integer(), nullable=True),
            sa.Column('timestamp', sa.Integer(), nullable=True),
            sa.PrimaryKeyConstraint('id'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'pallet',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.Unicode(length=64), nullable=True),
            sa.Column(
                'length',
                sa.Numeric(precision=10, scale=2),
                nullable=True
            ),
            sa.Column(
                'width',
                sa.Numeric(precision=10, scale=2),
                nullable=True
            ),
            sa.Column(
                'height',
                sa.Numeric(precision=10, scale=2),
                nullable=True
            ),
            sa.Column(
                'max_height',
                sa.Numeric(precision=10, scale=2),
                nullable=True
            ),
            sa.Column(
                'max_weight',
                sa.Numeric(precision=10, scale=2),
                nullable=True
            ),
            sa.Column('pallet_type', sa.Boolean(), nullable=True),
            sa.Column(
                'thickness',
                sa.Numeric(precision=10, scale=2),
                nullable=True
            ),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('name'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'tool_information',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('tool_id', sa.Integer(), nullable=False),
            sa.Column('tool_name', sa.Text(), nullable=False),
            sa.Column('img_path', sa.Text(), nullable=True),
            sa.Column('is_used', sa.Integer(), nullable=True),
            sa.PrimaryKeyConstraint('id'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'action_label',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('mode', sa.String(length=45), nullable=True),
            sa.Column('tool_id', sa.Integer(), nullable=True),
            sa.Column('topple_strength_degree', sa.Integer(), nullable=True),
            sa.Column('assist_task_id', sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(
                ['assist_task_id'],
                ['assist_task.task_id'], ),
            sa.PrimaryKeyConstraint('id'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'design',
            sa.Column('id', sa.Integer(), nullable=False),
            sa.Column('name', sa.Unicode(length=64), nullable=True),
            sa.Column('pallet_id', sa.Integer(), nullable=True),
            sa.Column('box_id', sa.Integer(), nullable=True),
            sa.Column('layout', sa.JSON(), nullable=True),
            sa.ForeignKeyConstraint(['box_id'], ['box.id'], ),
            sa.ForeignKeyConstraint(['pallet_id'], ['pallet.id'], ),
            sa.PrimaryKeyConstraint('id'),
            sa.UniqueConstraint('name'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'exp_image',
            sa.Column(
                'image_id',
                sa.Integer(),
                autoincrement=True,
                nullable=False
            ),
            sa.Column('task_id', sa.Integer(), nullable=True),
            sa.Column('image_url', sa.Text(), nullable=True),
            sa.Column('camera_id', sa.Text(), nullable=True),
            sa.Column('img_type', sa.String(length=255), nullable=True),
            sa.Column('img_height', sa.Integer(), nullable=True),
            sa.Column('img_width', sa.Integer(), nullable=True),
            sa.Column(
                'annotation_json_string',
                mysql.LONGTEXT(),
                nullable=True
            ),
            sa.ForeignKeyConstraint(['task_id'], ['assist_task.task_id'], ),
            sa.PrimaryKeyConstraint('image_id'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('exp_image')
    op.drop_table('design')
    op.drop_table('action_label')
    op.drop_table('tool_information')
    op.drop_table('pallet')
    op.drop_table('log')
    op.drop_index(op.f('ix_dpt_map_box_update_time'), table_name='dpt_map_box')
    op.drop_index(op.f('ix_dpt_map_box_create_time'), table_name='dpt_map_box')
    op.drop_table('dpt_map_box')
    op.drop_table('box')
    op.drop_table('assist_task')
    # ### end Alembic commands ###
