"""init wcs tables

Revision ID: 9734b714a57d
Revises: 
Create Date: 2022-06-28 19:22:30.416850

"""
import sqlalchemy
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '9734b714a57d'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    try:
        op.create_table(
            'task_manager_model',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column(
                'task_manager_data',
                sa.LargeBinary(length=65536),
                nullable=True
            ),
            sa.Column(
                'offline_task_manager_data',
                sa.LargeBinary(length=65536),
                nullable=True
            ),
            sa.Column('backup_time', sa.DateTime(), nullable=True),
            sa.PrimaryKeyConstraint('id'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'wcs_history_orders',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column(
                'order_id',
                sa.String(length=50),
                nullable=False,
                comment='订单号'
            ),
            sa.Column(
                'order_status',
                sa.Enum(
                    'PENDING',
                    'UNSTARTED',
                    'STARTED',
                    'FINISHED',
                    'ERROR',
                    'TERMINATED',
                    name='taskstatus'
                ),
                nullable=True,
                comment='订单状态'
            ),
            sa.Column(
                'customized_data',
                sa.JSON(),
                nullable=True,
                comment='自定义数据'
            ),
            sa.Column(
                'start_time',
                sa.DateTime(),
                nullable=True,
                comment='开始时间'
            ),
            sa.Column('end_time', sa.DateTime(), nullable=True, comment='结束时间'),
            sa.Column(
                'create_time',
                sa.DateTime(),
                nullable=True,
                comment='创建时间'
            ),
            sa.Column('error_code', sa.Integer(), nullable=True, comment='异常码'),
            sa.Column(
                'error_msg',
                sa.String(length=255),
                nullable=True,
                comment='异常信息'
            ),
            sa.PrimaryKeyConstraint('id')
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_index(
            'idx_order_id',
            'wcs_history_orders',
            ['order_id', 'id'],
            unique=True
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_index(
            op.f('ix_wcs_history_orders_create_time'),
            'wcs_history_orders',
            ['create_time'],
            unique=False
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'wcs_history_tasks',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column(
                'task_id',
                sa.String(length=50),
                nullable=True,
                comment='任务ID'
            ),
            sa.Column(
                'order_id',
                sa.String(length=50),
                nullable=True,
                comment='订单ID'
            ),
            sa.Column(
                'task_type',
                sa.Enum(
                    'SINGLE_DEPAL',
                    'SINGLE_PAL',
                    'MULTI_DEPAL',
                    'MULTI_PAL_ONLINE',
                    'MULTI_PAL_OFFLINE',
                    'PP_DEFAULT',
                    'PP_CYCLE',
                    'DEMO',
                    name='tasktype'
                ),
                nullable=True,
                comment='任务类型'
            ),
            sa.Column(
                'task_status',
                sa.Enum(
                    'PENDING',
                    'UNSTARTED',
                    'STARTED',
                    'FINISHED',
                    'ERROR',
                    'TERMINATED',
                    name='taskstatus'
                ),
                nullable=True,
                comment='任务状态'
            ),
            sa.Column('sku_info', sa.JSON(), nullable=True, comment='sku的信息'),
            sa.Column(
                'target_num',
                sa.Integer(),
                nullable=True,
                comment='需要执行的数量'
            ),
            sa.Column(
                'done_num',
                sa.Integer(),
                nullable=True,
                comment='已完成的数量'
            ),
            sa.Column(
                'from_ws',
                sa.String(length=50),
                nullable=True,
                comment='抓取位ID'
            ),
            sa.Column(
                'to_ws',
                sa.String(length=50),
                nullable=True,
                comment='放置位ID'
            ),
            sa.Column(
                'customized_data',
                sa.JSON(),
                nullable=True,
                comment='自定义数据'
            ),
            sa.Column(
                'start_time',
                sa.DateTime(),
                nullable=True,
                comment='开始时间'
            ),
            sa.Column('end_time', sa.DateTime(), nullable=True, comment='结束时间'),
            sa.Column(
                'create_time',
                sa.DateTime(),
                nullable=True,
                comment='创建时间'
            ),
            sa.Column('error_code', sa.Integer(), nullable=True, comment='异常码'),
            sa.Column(
                'error_msg',
                sa.String(length=255),
                nullable=True,
                comment='异常信息'
            ),
            sa.PrimaryKeyConstraint('id')
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_index(
            'idx_task_id_order_id',
            'wcs_history_tasks',
            ['task_id', 'order_id'],
            unique=False
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_index(
            op.f('ix_wcs_history_tasks_create_time'),
            'wcs_history_tasks',
            ['create_time'],
            unique=False
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'wcs_order_manager_cache',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('bin', sa.LargeBinary(), nullable=True),
            sa.Column('backup_time', sa.DateTime(), nullable=True),
            sa.PrimaryKeyConstraint('id'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'wcs_task_manager_cache',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('bin', sa.LargeBinary(length=65536), nullable=True),
            sa.Column('backup_time', sa.DateTime(), nullable=True),
            sa.PrimaryKeyConstraint('id'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass

    try:
        op.create_table(
            'wcs_workspace_manager_cache',
            sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
            sa.Column('bin', sa.LargeBinary(length=65536), nullable=True),
            sa.Column('backup_time', sa.DateTime(), nullable=True),
            sa.PrimaryKeyConstraint('id'),
            mysql_charset='utf8'
        )
    except sqlalchemy.exc.OperationalError:
        pass
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wcs_workspace_manager_cache')
    op.drop_table('wcs_task_manager_cache')
    op.drop_table('wcs_order_manager_cache')
    op.drop_index(
        op.f('ix_wcs_history_tasks_create_time'),
        table_name='wcs_history_tasks'
    )
    op.drop_index('idx_task_id_order_id', table_name='wcs_history_tasks')
    op.drop_table('wcs_history_tasks')
    op.drop_index(
        op.f('ix_wcs_history_orders_create_time'),
        table_name='wcs_history_orders'
    )
    op.drop_index('idx_order_id', table_name='wcs_history_orders')
    op.drop_table('wcs_history_orders')
    op.drop_table('task_manager_model')
    # ### end Alembic commands ###
